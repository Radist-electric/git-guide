import React from 'react';
// import { Row } from 'reactstrap';
import Select from '../../select/Select'
import Multiselect from '../../select/Multiselect';

let gitCommit = [
  {
    command: 'git commit',
    input: false,
    descWithoutInput: 'Записать проиндексированные изменения в репозиторий. Текстовый комментарий обязателен, поэтому откроется редактор, выбранный по умолчанию. Напишите там своё сообщение и сохраните.'
  },
  {
    command: 'git commit -a',
    input: false,
    descWithoutInput: 'Перед выполнение коммита будут занесены в индекс все отслеживаемые файлы. Новые файлы не индексируются. Далее все проиндексированные изменения записываются в репозиторий. Текстовый комментарий обязателен, поэтому откроется редактор, выбранный по умолчанию. Напишите там своё сообщение и сохраните.'
  },
  {
    command: 'git commit -m',
    input: true,
    quote: '"',
    inputPlaceholder: 'Текст сообщения',
    descWithoutInput: 'Записать проиндексированные изменения в репозиторий. Текстовый комментарий обязателен, поэтому коммит будет проигнорирован, если сообщение пустое.',
    descWithInput: 'Записать проиндексированные изменения в репозиторий. Текстовый комментарий, который Вы написали, будет добавлен в команду.'
  },
  {
    command: 'git commit -a -m',
    input: true,
    quote: '"',
    inputPlaceholder: 'Текст сообщения',
    descWithoutInput: 'Перед выполнение коммита будут занесены в индекс все отслеживаемые файлы. Новые файлы не индексируются. Текстовый комментарий обязателен, поэтому коммит будет проигнорирован, если сообщение пустое.',
    descWithInput: 'Перед выполнение коммита будут занесены в индекс все отслеживаемые файлы. Новые файлы не индексируются. Текстовый комментарий, который Вы написали, будет добавлен в команду. Далее проиндексированные изменения записываются в репозиторий.'
  }
];
let gitReset = [
  {
    command: 'git reset --hard [commit]',
    input: [
      'Хэш коммита, например, 92c68f9...'
    ],
    description: 'Принудительно возвращает к указанному коммиту [input], не сохраняя историю и изменения.'
  }
];


const Commits = () => {
  return (
    <>
      <h2>Работа с коммитами</h2>
      <Select data={gitCommit} />
      <Multiselect data={gitReset} />
    </>
  );
}

export default Commits;